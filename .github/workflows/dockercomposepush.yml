name: Docker Compose CI

on:
  push:
    branches: ["ravindu"]

jobs:
  Build-and-Push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.0

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Dependecies
        run: |
          npm install
          npm ci
        working-directory: ./Client/Admin/

      - name: Build
        run: npm run build
        working-directory: ./Client/Admin/

      - name: Save version
        id: version-admin
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))
        working-directory: ./Client/Admin/
      
      - name: Dependecies
        run: |
          npm install
          npm ci
        working-directory: ./Client/User/

      - name: Build
        run: npm run build
        working-directory: ./Client/User/

      - name: Save version
        id: version-user
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))
        working-directory: ./Client/User/
      
      - name: Dependecies
        run: |
          npm install
          npm ci
        working-directory: ./Server/

      - name: Save version
        id: version-server
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))
        working-directory: ./Server/

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and Push Docker Images
        run: |
          docker-compose build

          # Tag and push frontend-admin service
          docker tag frontend-admin:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend-admin:${{ steps.version-admin.outputs.tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-admin:${{ steps.version-admin.outputs.tag }}

          # Tag and push frontend-user service
          docker tag frontend-user:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend-user:${{ steps.version-user.outputs.tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-user:${{ steps.version-user.outputs.tag }}

          # Tag and push backend service
          docker tag backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.version-server.outputs.tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.version-server.outputs.tag }}
